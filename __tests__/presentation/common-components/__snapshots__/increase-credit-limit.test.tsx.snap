// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChartIncreaseCreditLimit renders correctly ChartIncreaseCreditLimit 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": "100%",
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "marginTop": -20,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "letterSpacing": 0.25,
                    "lineHeight": 20,
                  },
                  Object {
                    "color": "#26323880",
                  },
                  Object {
                    "textAlign": "center",
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#E31A2C",
                  },
                  Object {
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 30,
                    "fontWeight": undefined,
                    "letterSpacing": 0.25,
                    "lineHeight": 40,
                    "textAlign": "left",
                  },
                  Object {
                    "textAlign": "center",
                  },
                ]
              }
            >
              $1.000,00
            </Text>
          </View>
          <View
            collapsable={false}
            style={
              Object {
                "height": 232,
                "position": "absolute",
                "width": 232,
              }
            }
          >
            <RNSVGSvgView
              bbHeight={232}
              bbWidth={232}
              focusable={false}
              height={232}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": 232,
                    "width": 232,
                  },
                ]
              }
              width={232}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M 203.37383539249433 179.48080724758708 A 108 108 0 1 0 28.626164607505686 179.4808072475871"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                      "strokeLinecap",
                    ]
                  }
                  stroke={4293322470}
                  strokeDasharray={
                    Array [
                      "475.00880922277673",
                      "475.00880922277673",
                    ]
                  }
                  strokeLinecap={1}
                  strokeWidth={16}
                />
                <RNSVGPath
                  d="M 116 8 A 108 108 0 0 0 28.626164607505686 179.4808072475871"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                      "strokeLinecap",
                    ]
                  }
                  stroke={4293073452}
                  strokeDasharray={
                    Array [
                      "475.00880922277673",
                      "475.00880922277673",
                    ]
                  }
                  strokeLinecap={1}
                  strokeWidth={16}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            style={
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "height": 232,
                  "width": 232,
                },
              ]
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={2}
              handlerType="PanGestureHandler"
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "backgroundColor": "#E31A2C",
                  "borderColor": "#E6E6E6",
                  "borderRadius": 19,
                  "borderWidth": 5,
                  "bottom": 0,
                  "elevation": 4,
                  "height": 39,
                  "left": 0,
                  "marginLeft": -11,
                  "marginTop": -11,
                  "position": "absolute",
                  "right": 0,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.25,
                  "shadowRadius": 3.84,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                    Object {
                      "translateX": 108,
                    },
                  ],
                  "width": 39,
                }
              }
            />
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;

exports[`ChartIncreaseCreditLimit renders correctly ChartIncreaseCreditLimit in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": "100%",
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "marginTop": -20,
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 14,
                    "fontWeight": "400",
                    "letterSpacing": 0.25,
                    "lineHeight": 20,
                  },
                  Object {
                    "color": "#26323880",
                  },
                  Object {
                    "textAlign": "center",
                  },
                ]
              }
            />
            <View
              style={
                Object {
                  "height": 8,
                }
              }
            />
            <Text
              style={
                Array [
                  Object {
                    "color": "#E31A2C",
                  },
                  Object {
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 30,
                    "fontWeight": undefined,
                    "letterSpacing": 0.25,
                    "lineHeight": 40,
                    "textAlign": "left",
                  },
                  Object {
                    "textAlign": "center",
                  },
                ]
              }
            >
              $1.000,00
            </Text>
          </View>
          <View
            collapsable={false}
            style={
              Object {
                "height": 232,
                "position": "absolute",
                "width": 232,
              }
            }
          >
            <RNSVGSvgView
              bbHeight={232}
              bbWidth={232}
              focusable={false}
              height={232}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": 232,
                    "width": 232,
                  },
                ]
              }
              width={232}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M 203.37383539249433 179.48080724758708 A 108 108 0 1 0 28.626164607505686 179.4808072475871"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                      "strokeLinecap",
                    ]
                  }
                  stroke={4293322470}
                  strokeDasharray={
                    Array [
                      "475.00880922277673",
                      "475.00880922277673",
                    ]
                  }
                  strokeLinecap={1}
                  strokeWidth={16}
                />
                <RNSVGPath
                  d="M 116 8 A 108 108 0 0 0 28.626164607505686 179.4808072475871"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeDasharray",
                      "strokeLinecap",
                    ]
                  }
                  stroke={4293073452}
                  strokeDasharray={
                    Array [
                      "475.00880922277673",
                      "475.00880922277673",
                    ]
                  }
                  strokeLinecap={1}
                  strokeWidth={16}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            style={
              Array [
                Object {
                  "position": "absolute",
                },
                Object {
                  "height": 232,
                  "width": 232,
                },
              ]
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={1}
              handlerType="PanGestureHandler"
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "backgroundColor": "#E31A2C",
                  "borderColor": "#E6E6E6",
                  "borderRadius": 19,
                  "borderWidth": 5,
                  "bottom": 0,
                  "elevation": 4,
                  "height": 39,
                  "left": 0,
                  "marginLeft": -11,
                  "marginTop": -11,
                  "position": "absolute",
                  "right": 0,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.25,
                  "shadowRadius": 3.84,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                    Object {
                      "translateX": 108,
                    },
                  ],
                  "width": 39,
                }
              }
            />
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
