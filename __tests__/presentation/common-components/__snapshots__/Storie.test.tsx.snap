// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storie test renders correctly Storie in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 8,
                "height": 144,
                "marginHorizontal": 2,
                "overflow": "hidden",
                "width": 100,
              }
            }
          >
            <View
              accessibilityIgnoresInvertColors={true}
              style={
                Object {
                  "borderRadius": 8,
                  "height": 144,
                  "marginHorizontal": 2,
                  "overflow": "hidden",
                  "width": 100,
                }
              }
            >
              <Image
                borderRadius={8}
                source={
                  Object {
                    "uri": "undefinedundefined",
                  }
                }
                style={
                  Array [
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "height": 144,
                      "width": 100,
                    },
                    undefined,
                  ]
                }
              />
              <BVLinearGradient
                colors={
                  Array [
                    16777215,
                    4278190080,
                  ]
                }
                endPoint={
                  Object {
                    "x": 0.5,
                    "y": 1,
                  }
                }
                locations={null}
                startPoint={
                  Object {
                    "x": 0.5,
                    "y": 0,
                  }
                }
                style={
                  Object {
                    "alignItems": "flex-start",
                    "height": 144,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": "75%",
                    }
                  }
                />
                <Text
                  numberOfLines={2}
                  style={
                    Object {
                      "color": "#ffffff",
                      "fontFamily": undefined,
                      "fontSize": 11,
                      "fontWeight": undefined,
                      "marginLeft": 4,
                      "paddingBottom": 20,
                      "textAlign": "left",
                      "width": "92%",
                    }
                  }
                />
              </BVLinearGradient>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
