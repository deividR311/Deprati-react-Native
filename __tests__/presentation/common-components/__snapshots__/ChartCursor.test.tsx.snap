// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChartCursor test renders correctly ChartCursor in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "position": "absolute",
              },
              Object {
                "height": 0,
                "width": 0,
              },
            ]
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            handlerTag={1}
            handlerType="PanGestureHandler"
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "backgroundColor": "#E31A2C",
                "borderColor": "#E6E6E6",
                "borderRadius": 19,
                "borderWidth": 5,
                "bottom": 0,
                "elevation": 4,
                "height": 39,
                "left": 0,
                "marginLeft": -11,
                "marginTop": -11,
                "position": "absolute",
                "right": 0,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.25,
                "shadowRadius": 3.84,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
                "width": 39,
              }
            }
          />
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
