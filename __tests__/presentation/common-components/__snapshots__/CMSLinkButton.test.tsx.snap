// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CMSLinkButton renders correctly CMSLinkButton in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignSelf": "center",
                "paddingHorizontal": 16,
                "paddingVertical": 8,
                "width": "100%",
              },
              undefined,
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#263238",
                "borderRadius": 5,
                "borderStyle": "solid",
                "borderWidth": 1,
                "elevation": 0,
                "justifyContent": "center",
                "minWidth": 64,
                "width": "100%",
              }
            }
          >
            <View
              accessibilityLabel=""
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Object {
                    "borderRadius": 5,
                  },
                ]
              }
              testID=""
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    Object {},
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "fontFamily": "System",
                        "fontWeight": "400",
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Array [
                        Object {
                          "letterSpacing": 1,
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        undefined,
                        Object {
                          "textTransform": "uppercase",
                        },
                        Object {
                          "color": "#E31A2C",
                          "fontFamily": "System",
                          "fontWeight": "500",
                        },
                        Object {
                          "fontFamily": "System",
                          "fontWeight": "500",
                        },
                        Array [
                          Object {
                            "width": "80%",
                          },
                          Object {},
                        ],
                      ],
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#263238",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": undefined,
                        },
                        Array [
                          Object {
                            "alignSelf": "center",
                            "color": "#000000",
                            "fontFamily": "Roboto-Regular",
                            "fontSize": 14,
                            "fontWeight": "700",
                            "letterSpacing": 0.8,
                            "textAlign": "center",
                          },
                          undefined,
                        ],
                      ]
                    }
                  >
                    linkName
                  </Text>
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
