// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListCardButton renders correctly ListCardButton in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          accessibilityLabel="string;"
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 5,
                  "elevation": 4,
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "margin": 6,
                  "paddingVertical": 10,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 2.5,
                  "width": 104,
                },
                Object {
                  "backgroundColor": "#ffffff",
                },
                Object {},
              ],
            ]
          }
          testID="string;"
        >
          <View
            style={
              Array [
                Object {
                  "alignSelf": "flex-end",
                  "backgroundColor": "transparent",
                  "borderTopRightRadius": 4,
                  "height": 14,
                  "marginBottom": 4,
                  "marginTop": -10,
                  "paddingHorizontal": 4,
                  "paddingVertical": 2,
                },
                Object {},
              ]
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "fontFamily": "Roboto-Bold",
                    "fontWeight": "bold",
                  },
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "fontSize": 8,
                    "textTransform": "uppercase",
                  },
                  Object {},
                ]
              }
            />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#FEF6F7",
                "borderRadius": 32,
                "height": 64,
                "marginBottom": 4,
                "width": 64,
              }
            }
          >
            <Image
              resizeMethod="resize"
              resizeMode="cover"
              source={
                Object {
                  "height": 64,
                  "uri": "string",
                  "width": 64,
                }
              }
              style={
                Object {
                  "borderRadius": 32,
                }
              }
            />
          </View>
          <Text
            numberOfLines={3}
            style={
              Array [
                Object {
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "textAlign": "center",
                },
                Object {
                  "flex": 1,
                  "marginHorizontal": 4,
                },
                Object {},
              ]
            }
          >
            string
          </Text>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
