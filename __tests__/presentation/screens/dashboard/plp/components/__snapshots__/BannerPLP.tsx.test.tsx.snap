// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BannerPLP renders correctly in Snapshot BannerPLP 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "height": "auto",
                  "marginTop": 5,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <Image
              resizeMode="contain"
              source={
                Object {
                  "uri": undefined,
                }
              }
              style={
                Array [
                  Object {
                    "width": "100%",
                  },
                  Object {
                    "aspectRatio": 1,
                  },
                  undefined,
                ]
              }
              testID="simple-banner"
            />
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
