// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VariantTallaSAP renders correctly in Snapshot VariantTallaSAP 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "marginHorizontal": 16,
              "marginTop": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#000000",
                "fontFamily": "Roboto-Regular",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0.44,
                "lineHeight": 24,
                "textAlign": "left",
              }
            }
          >
            Talla
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "marginVertical": 16,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#E6E6E6",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "height": 60,
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "marginRight": 16,
                  "opacity": 1,
                  "overflow": "hidden",
                  "padding": 2,
                  "width": 80,
                }
              }
            >
              <Text
                numberOfLines={3}
                style={
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "#000000",
                      "fontFamily": "Roboto-Regular",
                      "fontSize": 14,
                      "fontWeight": "400",
                      "letterSpacing": 0.25,
                      "lineHeight": 20,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#263238",
                    },
                  ]
                }
              >
                000000
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#E6E6E6",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "height": 60,
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "marginRight": 16,
                  "opacity": 1,
                  "overflow": "hidden",
                  "padding": 2,
                  "width": 80,
                }
              }
            >
              <Text
                numberOfLines={3}
                style={
                  Array [
                    Object {
                      "alignSelf": "center",
                      "color": "#000000",
                      "fontFamily": "Roboto-Regular",
                      "fontSize": 14,
                      "fontWeight": "400",
                      "letterSpacing": 0.25,
                      "lineHeight": 20,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#263238",
                    },
                  ]
                }
              >
                000001
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
