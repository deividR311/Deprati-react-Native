// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QRConfirmationBottomSheet renders correctly in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            style={
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                },
              ]
            }
          >
            <View>
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "flex": 1,
                    "paddingHorizontal": 22,
                    "paddingTop": 28,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#000000",
                      "fontFamily": "Roboto-Regular",
                      "fontSize": 23,
                      "fontWeight": "700",
                      "letterSpacing": 0.44,
                      "textAlign": "center",
                    }
                  }
                >
                  CÃ³digo de compra
                </Text>
                <View
                  style={
                    Object {
                      "marginVertical": 18,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={200}
                    bbWidth={200}
                    focusable={false}
                    height={200}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "flex": 0,
                          "height": 200,
                          "width": 200,
                        },
                      ]
                    }
                    vbHeight={200}
                    vbWidth={200}
                    width={200}
                  >
                    <RNSVGGroup>
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            Array [
                              0,
                              -65536,
                              1,
                              -16711681,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="grad"
                          x1="0%"
                          x2="100%"
                          y1="0%"
                          y2="100%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup>
                        <RNSVGRect
                          fill={4294967295}
                          height={200}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          width={200}
                          x={-0}
                          y={-0}
                        />
                      </RNSVGGroup>
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M0 4 L56 4 M64 4 L96 4 M104 4 L112 4 M144 4 L200 4 M0 12 L8 12 M48 12 L56 12 M64 12 L72 12 M88 12 L96 12 M112 12 L120 12 M144 12 L152 12 M192 12 L200 12 M0 20 L8 20 M16 20 L40 20 M48 20 L56 20 M64 20 L80 20 M96 20 L112 20 M120 20 L136 20 M144 20 L152 20 M160 20 L184 20 M192 20 L200 20 M0 28 L8 28 M16 28 L40 28 M48 28 L56 28 M72 28 L88 28 M104 28 L112 28 M128 28 L136 28 M144 28 L152 28 M160 28 L184 28 M192 28 L200 28 M0 36 L8 36 M16 36 L40 36 M48 36 L56 36 M64 36 L72 36 M80 36 L88 36 M112 36 L120 36 M144 36 L152 36 M160 36 L184 36 M192 36 L200 36 M0 44 L8 44 M48 44 L56 44 M80 44 L104 44 M112 44 L120 44 M144 44 L152 44 M192 44 L200 44 M0 52 L56 52 M64 52 L72 52 M80 52 L88 52 M96 52 L104 52 M112 52 L120 52 M128 52 L136 52 M144 52 L200 52 M80 60 L88 60 M96 60 L112 60 M120 60 L136 60 M0 68 L8 68 M24 68 L88 68 M96 68 L104 68 M112 68 L120 68 M128 68 L144 68 M160 68 L168 68 M176 68 L200 68 M0 76 L16 76 M32 76 L48 76 M64 76 L72 76 M88 76 L96 76 M112 76 L128 76 M152 76 L168 76 M176 76 L192 76 M32 84 L80 84 M88 84 L96 84 M112 84 L128 84 M144 84 L152 84 M160 84 L176 84 M192 84 L200 84 M0 92 L24 92 M40 92 L48 92 M72 92 L80 92 M88 92 L104 92 M112 92 L120 92 M136 92 L152 92 M168 92 L184 92 M8 100 L24 100 M48 100 L56 100 M64 100 L72 100 M120 100 L128 100 M144 100 L160 100 M0 108 L16 108 M24 108 L48 108 M64 108 L80 108 M96 108 L136 108 M152 108 L168 108 M0 116 L16 116 M40 116 L56 116 M72 116 L88 116 M104 116 L136 116 M144 116 L152 116 M160 116 L168 116 M184 116 L200 116 M0 124 L8 124 M16 124 L24 124 M56 124 L72 124 M80 124 L88 124 M96 124 L104 124 M112 124 L120 124 M128 124 L160 124 M176 124 L192 124 M0 132 L8 132 M32 132 L64 132 M88 132 L184 132 M64 140 L96 140 M104 140 L112 140 M128 140 L136 140 M160 140 L168 140 M176 140 L200 140 M0 148 L56 148 M64 148 L88 148 M96 148 L104 148 M128 148 L136 148 M144 148 L152 148 M160 148 L168 148 M176 148 L184 148 M192 148 L200 148 M0 156 L8 156 M48 156 L56 156 M64 156 L72 156 M80 156 L96 156 M104 156 L120 156 M128 156 L136 156 M160 156 L168 156 M0 164 L8 164 M16 164 L40 164 M48 164 L56 164 M64 164 L96 164 M104 164 L112 164 M120 164 L176 164 M184 164 L200 164 M0 172 L8 172 M16 172 L40 172 M48 172 L56 172 M64 172 L72 172 M96 172 L152 172 M176 172 L200 172 M0 180 L8 180 M16 180 L40 180 M48 180 L56 180 M72 180 L80 180 M88 180 L96 180 M104 180 L112 180 M120 180 L128 180 M152 180 L176 180 M184 180 L200 180 M0 188 L8 188 M48 188 L56 188 M72 188 L80 188 M88 188 L112 188 M144 188 L152 188 M160 188 L200 188 M0 196 L56 196 M64 196 L72 196 M80 196 L112 196 M128 196 L152 196 M168 196 L184 196 M192 196 L200 196 "
                          propList={
                            Array [
                              "stroke",
                              "strokeWidth",
                              "strokeLinecap",
                            ]
                          }
                          stroke={4278190080}
                          strokeLinecap={0}
                          strokeWidth={8}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "fontFamily": "Roboto-Regular",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "letterSpacing": 0.25,
                        "lineHeight": 20,
                      },
                      Object {
                        "textAlign": "center",
                      },
                      Object {
                        "marginTop": 40,
                      },
                    ]
                  }
                >
                  buttonActivePress
                </Text>
                <View
                  accessibilityLabel="CONTINUAR COMPRA"
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#D3D3D3",
                      "borderRadius": 5,
                      "flexDirection": "row",
                      "height": 40,
                      "justifyContent": "center",
                      "marginTop": 16,
                      "opacity": 1,
                      "paddingVertical": 10,
                    }
                  }
                  testID="CONTINUAR COMPRA"
                >
                  <ActivityIndicator
                    color="#ffffff"
                    size="small"
                    style={
                      Object {
                        "marginRight": 8,
                      }
                    }
                  />
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "Roboto-Regular",
                          "fontSize": 14,
                          "fontWeight": "700",
                          "letterSpacing": 0.8,
                          "textAlign": "center",
                        },
                        undefined,
                        Object {
                          "color": "#ffffff",
                          "opacity": 0.5,
                        },
                      ]
                    }
                  >
                    CONTINUAR COMPRA
                  </Text>
                </View>
                <View
                  accessibilityLabel="CANCELAR"
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "borderColor": "#000000",
                      "borderRadius": 5,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "height": 40,
                      "justifyContent": "center",
                      "marginTop": 16,
                      "opacity": 1,
                      "paddingVertical": 10,
                      "width": "100%",
                    }
                  }
                  testID="CANCELAR"
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "Roboto-Regular",
                          "fontSize": 14,
                          "fontWeight": "700",
                          "letterSpacing": 0.8,
                          "textAlign": "center",
                        },
                        undefined,
                        Object {
                          "color": "#000000",
                          "opacity": 1,
                        },
                      ]
                    }
                  >
                    CANCELAR
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "backgroundColor": "#E6E6E6",
                      "height": 1,
                      "marginVertical": 24,
                      "width": "100%",
                    }
                  }
                />
                <Text
                  onPress={[Function]}
                  style={
                    Object {
                      "color": "#E31A2C",
                      "fontFamily": "Roboto-Bold",
                      "fontSize": 16,
                      "fontWeight": "bold",
                      "lineHeight": 24,
                      "textAlign": "center",
                      "textDecorationLine": "underline",
                    }
                  }
                >
                  Ver cupo disponible
                </Text>
                <Modal
                  animationType="fade"
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onRequestClose={[Function]}
                  transparent={true}
                  visible={false}
                />
              </View>
            </View>
          </RCTScrollView>
          <Modal
            animationType="fade"
            hardwareAccelerated={false}
            onDismiss={[Function]}
            transparent={true}
            visible={false}
          />
          <Modal
            hardwareAccelerated={false}
            transparent={true}
            visible={false}
          />
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
