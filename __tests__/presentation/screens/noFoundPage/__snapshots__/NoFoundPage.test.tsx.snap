// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoFoundPage renders correctly in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="Resultados de búsqueda"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "height": "90%",
                  "width": "100%",
                },
              ]
            }
          >
            <Image
              imageStyle={
                Object {
                  "aspectRatio": 0.5622188905547226,
                }
              }
              resizeMode="stretch"
              source={
                Object {
                  "testUri": "../../../assets/images/noResults.jpg",
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "aspectRatio": 0.7058823529411765,
                    "backgroundColor": "#ffffff",
                    "height": "100%",
                    "justifyContent": "flex-end",
                    "marginBottom": 8,
                    "maxHeight": 600,
                    "minHeight": 500,
                    "width": "100%",
                  },
                ]
              }
            />
            <View
              accessibilityLabel=""
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#E31A2C",
                  "borderRadius": 5,
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "marginHorizontal": 16,
                  "opacity": 1,
                  "paddingVertical": 10,
                  "width": "90%",
                }
              }
              testID=""
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "white",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": undefined,
                      },
                      Object {},
                      Object {},
                    ]
                  }
                >
                  REGRESAR A LA PÁGINA PRINCIPAL
                </Text>
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
