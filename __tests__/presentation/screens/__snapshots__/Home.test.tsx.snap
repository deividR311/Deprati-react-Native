// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home renders correctly in Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "height": 50,
                "justifyContent": "space-between",
                "paddingHorizontal": 15,
                "paddingVertical": 10,
              },
              false,
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#263238",
                      "fontSize": 28,
                    },
                    Object {
                      "marginHorizontal": 5,
                    },
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="shopping-cart"
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 26,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          style={
            Object {
              "height": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                  "display": "flex",
                  "paddingBottom": 5,
                  "paddingHorizontal": 16,
                  "paddingTop": 15,
                  "position": "relative",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#E9EBED",
                  "borderRadius": 3,
                  "color": "#E31A2C",
                  "flexDirection": "row",
                  "fontSize": 14,
                  "height": 40,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingLeft": 20,
                  "paddingRight": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#263238",
                      "flexGrow": 3,
                      "fontFamily": "Roboto-Regular",
                      "fontSize": 14,
                      "lineHeight": 16,
                      "opacity": 0.7,
                    },
                  ]
                }
              >
                Busca aquí
              </Text>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#263238",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰁲
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            ListFooterComponent={[Function]}
            contentContainerStyle={
              Object {
                "backgroundColor": "#ffffff",
                "paddingBottom": 86,
              }
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsHorizontalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Array [
                Object {
                  "width": "100%",
                },
                undefined,
              ]
            }
            viewabilityConfigCallbackPairs={Array []}
          >
            <View>
              <View
                onLayout={[Function]}
              />
            </View>
          </RCTScrollView>
          <Modal
            hardwareAccelerated={false}
            transparent={true}
            visible={false}
          />
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;

exports[`Home renders correctly in Snapshot Login and shows message welcome 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "height": 50,
                "justifyContent": "space-between",
                "paddingHorizontal": 15,
                "paddingVertical": 10,
              },
              false,
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#263238",
                      "fontSize": 28,
                    },
                    Object {
                      "marginHorizontal": 5,
                    },
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="shopping-cart"
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 26,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          style={
            Object {
              "height": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                  "display": "flex",
                  "paddingBottom": 5,
                  "paddingHorizontal": 16,
                  "paddingTop": 15,
                  "position": "relative",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#E9EBED",
                  "borderRadius": 3,
                  "color": "#E31A2C",
                  "flexDirection": "row",
                  "fontSize": 14,
                  "height": 40,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingLeft": 20,
                  "paddingRight": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#263238",
                      "flexGrow": 3,
                      "fontFamily": "Roboto-Regular",
                      "fontSize": 14,
                      "lineHeight": 16,
                      "opacity": 0.7,
                    },
                  ]
                }
              >
                Busca aquí
              </Text>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#263238",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰁲
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "paddingBottom": 5,
                "paddingHorizontal": 24,
                "paddingTop": 8,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                  },
                  Object {
                    "textAlign": "left",
                  },
                  Object {
                    "fontFamily": "Roboto-Regular",
                    "fontSize": 20,
                    "fontWeight": "400",
                    "letterSpacing": 0.15,
                    "lineHeight": 24,
                    "textAlign": "left",
                  },
                ]
              }
            >
              ¡Hola 
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Object {
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 20,
                      "fontWeight": "500",
                      "letterSpacing": 0.15,
                      "lineHeight": 24,
                      "textAlign": "center",
                      "textTransform": "capitalize",
                    },
                  ]
                }
              >
                !
              </Text>
            </Text>
          </View>
          <RCTScrollView
            ListFooterComponent={[Function]}
            contentContainerStyle={
              Object {
                "backgroundColor": "#ffffff",
                "paddingBottom": 86,
              }
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsHorizontalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Array [
                Object {
                  "width": "100%",
                },
                undefined,
              ]
            }
            viewabilityConfigCallbackPairs={Array []}
          >
            <View>
              <View
                onLayout={[Function]}
              />
            </View>
          </RCTScrollView>
          <Modal
            hardwareAccelerated={false}
            transparent={true}
            visible={false}
          />
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;

exports[`Home renders correctly in Snapshot home section components 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "flexDirection": "row",
                "height": 50,
                "justifyContent": "space-between",
                "paddingHorizontal": 15,
                "paddingVertical": 10,
              },
              false,
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#263238",
                      "fontSize": 28,
                    },
                    Object {
                      "marginHorizontal": 5,
                    },
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="shopping-cart"
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 26,
                    },
                    undefined,
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
        <View
          collapsable={false}
          style={
            Object {
              "height": 0,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                  "display": "flex",
                  "paddingBottom": 5,
                  "paddingHorizontal": 16,
                  "paddingTop": 15,
                  "position": "relative",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#E9EBED",
                  "borderRadius": 3,
                  "color": "#E31A2C",
                  "flexDirection": "row",
                  "fontSize": 14,
                  "height": 40,
                  "justifyContent": "center",
                  "opacity": 1,
                  "paddingLeft": 20,
                  "paddingRight": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#263238",
                      "flexGrow": 3,
                      "fontFamily": "Roboto-Regular",
                      "fontSize": 14,
                      "lineHeight": 16,
                      "opacity": 0.7,
                    },
                  ]
                }
              >
                Busca aquí
              </Text>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#263238",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰁲
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            ListFooterComponent={[Function]}
            contentContainerStyle={
              Object {
                "backgroundColor": "#ffffff",
                "paddingBottom": 86,
              }
            }
            data={
              Array [
                "HomeBannerInicioComponent",
                "HomePageCategoryListComponent",
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            showsHorizontalScrollIndicator={false}
            stickyHeaderIndices={Array []}
            style={
              Array [
                Object {
                  "width": "100%",
                },
                undefined,
              ]
            }
            viewabilityConfigCallbackPairs={Array []}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "auto",
                          "marginTop": 5,
                          "width": "100%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Image
                      resizeMode="contain"
                      source={
                        Object {
                          "uri": undefined,
                        }
                      }
                      style={
                        Array [
                          Object {
                            "width": "100%",
                          },
                          Object {
                            "aspectRatio": 1,
                          },
                          undefined,
                        ]
                      }
                      testID="simple-banner"
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    Object {
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#ffffff",
                        "paddingBottom": 20,
                        "paddingLeft": 16,
                        "paddingTop": 16,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#263238",
                          "fontFamily": "Roboto-Medium",
                          "fontSize": 18,
                          "fontWeight": undefined,
                        }
                      }
                    >
                      Navega por las categorías
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "flexWrap": "wrap",
                      }
                    }
                  >
                    <View
                      accessible={true}
                      style={
                        Array [
                          Object {
                            "height": 180,
                            "width": "50%",
                          },
                          Object {
                            "height": 180,
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <View
                        accessibilityLabel="category0"
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="category0"
                      >
                        <View
                          accessibilityIgnoresInvertColors={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#000000",
                              "height": "100%",
                              "justifyContent": "center",
                            }
                          }
                        >
                          <Image
                            source={
                              Object {
                                "uri": "https://imagestg.deprati.com.ec/sys-master/images/h6a/he6/8985041928222",
                              }
                            }
                            style={
                              Array [
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "height": "100%",
                                  "width": undefined,
                                },
                                undefined,
                              ]
                            }
                          />
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "center",
                                "borderColor": "#ffffff",
                                "borderRadius": 4,
                                "borderWidth": 1.5,
                                "justifyContent": "center",
                                "maxWidth": "90%",
                                "opacity": 1,
                                "paddingHorizontal": 15,
                                "paddingVertical": 11,
                                "textTransform": "capitalize",
                                "zIndex": 20,
                              }
                            }
                          >
                            <Text
                              numberOfLines={2}
                              style={
                                Array [
                                  Object {
                                    "color": "#ffffff",
                                    "fontFamily": "Roboto-Bold",
                                    "fontSize": 16,
                                    "textAlign": "center",
                                  },
                                  Object {
                                    "color": "#ffffff",
                                  },
                                ]
                              }
                            >
                              Niños
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
              />
            </View>
          </RCTScrollView>
          <Modal
            hardwareAccelerated={false}
            transparent={true}
            visible={false}
          />
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;

exports[`Home renders correctly in Snapshot loading skeleton home 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        hideShadow={true}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "flexDirection": "column",
                "paddingHorizontal": 16,
                "paddingVertical": 16,
              }
            }
            testID="skeleton_home"
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "width": "100%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "marginRight": 12,
                    "width": "31%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 140,
                      "key": "story",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "marginRight": 12,
                    "width": "31%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 140,
                      "key": "story",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "marginRight": 12,
                    "width": "31%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 140,
                      "key": "story",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              onLayout={[Function]}
              style={
                Object {
                  "marginVertical": 10,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#E1E9EE",
                    "borderRadius": 4,
                    "height": 100,
                    "key": "text-1",
                    "overflow": "hidden",
                    "width": "100%",
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "height": "100%",
                        "position": "absolute",
                        "width": "100%",
                      },
                      Object {
                        "transform": Array [
                          Object {
                            "translateX": undefined,
                          },
                        ],
                      },
                    ]
                  }
                >
                  <BVLinearGradient
                    colors={
                      Array [
                        4292995566,
                        4294113532,
                        4292995566,
                      ]
                    }
                    endPoint={
                      Object {
                        "x": 1,
                        "y": 0,
                      }
                    }
                    locations={null}
                    startPoint={
                      Object {
                        "x": 0,
                        "y": 0,
                      }
                    }
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "width": "100%",
                }
              }
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "paddingHorizontal": 2,
                    "paddingVertical": 2,
                    "width": "50%",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#E1E9EE",
                      "borderRadius": 4,
                      "height": 180,
                      "key": "cateogry-1",
                      "overflow": "hidden",
                      "width": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": "100%",
                          "position": "absolute",
                          "width": "100%",
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "translateX": undefined,
                            },
                          ],
                        },
                      ]
                    }
                  >
                    <BVLinearGradient
                      colors={
                        Array [
                          4292995566,
                          4294113532,
                          4292995566,
                        ]
                      }
                      endPoint={
                        Object {
                          "x": 1,
                          "y": 0,
                        }
                      }
                      locations={null}
                      startPoint={
                        Object {
                          "x": 0,
                          "y": 0,
                        }
                      }
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <Modal
            hardwareAccelerated={false}
            transparent={true}
            visible={true}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffb3",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                accessibilityRole="progressbar"
                accessibilityState={
                  Object {
                    "busy": true,
                  }
                }
                accessible={true}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 48,
                      "opacity": 1,
                      "width": 48,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "bottom": 0,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 48,
                          "transform": Array [
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 48,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 24,
                            "overflow": "hidden",
                            "width": 48,
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          style={
                            Object {
                              "height": 48,
                              "transform": Array [
                                Object {
                                  "translateY": 0,
                                },
                                Object {
                                  "rotate": "-165deg",
                                },
                              ],
                              "width": 48,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "height": 24,
                                "overflow": "hidden",
                                "width": 48,
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "borderColor": "#E31A2C",
                                  "borderRadius": 24,
                                  "borderWidth": 4.8,
                                  "height": 48,
                                  "width": 48,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "bottom": 0,
                        "justifyContent": "center",
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 48,
                          "transform": Array [
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 48,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 24,
                            "overflow": "hidden",
                            "top": 24,
                            "width": 48,
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          style={
                            Object {
                              "height": 48,
                              "transform": Array [
                                Object {
                                  "translateY": -24,
                                },
                                Object {
                                  "rotate": "345deg",
                                },
                              ],
                              "width": 48,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "height": 24,
                                "overflow": "hidden",
                                "width": 48,
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "borderColor": "#E31A2C",
                                  "borderRadius": 24,
                                  "borderWidth": 4.8,
                                  "height": 48,
                                  "width": 48,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </Modal>
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
